// ===================================================================
// ðŸš¨ AUTO-GENERATED FILE - DO NOT EDIT MANUALLY! ðŸš¨
// ===================================================================
// This file is automatically generated from schema/schema.graphql
// To make changes:
// 1. Edit schema/schema.graphql
// 2. Run: npm run codegen:all
// ===================================================================

/**
 * LunarCrush GraphQL Schema - Auto-Generated
 * Source: schema/schema.graphql (588 lines)
 * Generated: 2025-07-29T21:30:47.454Z
 */

export const typeDefs = `# LunarCrush Universal Backend - CORRECTED API Schema
# Fixed to match actual LunarCrush API v4 responses
# https://lunarcrush.com/developers/api/endpoints
# Single source of truth for all LunarCrush API types

scalar Date
scalar JSON

# ===== ENUMS =====

enum TimeInterval {
  ONE_HOUR
  FOUR_HOURS
  ONE_DAY
  ONE_WEEK
  ONE_MONTH
}

enum SortDirection {
  ASC
  DESC
}

# ===== QUERY ROOT =====

type Query {
  error: String
  # Health check
  health: String
  healthSimple: String

  # ===== TOPICS ENDPOINTS =====
  getTopicsList: [TopicListItem]
  getTopic(topic: String): TopicDetails
  getTopicWhatsup(topic: String): TopicWhatsup
  getTopicTimeSeries(topic: String, bucket: String, interval: String, start: String, end: String): [TopicTimeSeriesItem]
  getTopicTimeSeriesV2(topic: String, bucket: String): [TopicTimeSeriesItem]
  getTopicPosts(topic: String, start: String, end: String): [TopicPost]
  getTopicNews(topic: String): [TopicNews]
  getTopicCreators(topic: String): [TopicCreator]

  # ===== CATEGORIES ENDPOINTS =====
  getCategoriesList: [CategoryListItem]
  getCategory(category: String): CategoryDetails
  getCategoryTopics(category: String): [CategoryTopic]
  getCategoryTimeSeries(category: String, bucket: String, interval: String, start: String, end: String): [CategoryTimeSeriesItem]
  getCategoryPosts(category: String, start: String, end: String): [CategoryPost]
  getCategoryNews(category: String): [CategoryNews]
  getCategoryCreators(category: String): [CategoryCreator]

  # ===== CREATORS ENDPOINTS =====
  getCreatorsList: [CreatorListItem]
  getCreator(network: String, id: String): CreatorDetails
  getCreatorTimeSeries(network: String, id: String, bucket: String, interval: String, start: String, end: String): [CreatorTimeSeriesItem]
  getCreatorPosts(network: String, id: String, start: String, end: String): [CreatorPost]

  # ===== COINS ENDPOINTS (Fixed argument names) =====
  getCoinsList: [CoinListItem]
  getCoinsListV2: [CoinListItem]
  getCoin(symbol: String): CoinDetails  # Fixed: coin not symbol
  getCoinTimeSeries(symbol: String, bucket: String, interval: String, start: String, end: String): [CoinTimeSeriesItem]  # Fixed: coin not symbol
  getCoinMeta(symbol: String): CoinMeta  # Fixed: coin not symbol

  # ===== STOCKS ENDPOINTS (Fixed argument names) =====
  getStocksList: [StockListItem]
  getStocksListV2: [StockListItem]
  getStock(symbol: String): StockDetails  # Fixed: stock not symbol
  getStockTimeSeries(symbol: String, bucket: String, interval: String, start: String, end: String): [StockTimeSeriesItem]  # Fixed: stock not symbol

  # ===== NFTS ENDPOINTS (Fixed argument names) =====
  getNftsList: [NftListItem]
  getNftsListV2: [NftListItem]
  getNft(id: String): NftDetails  # Fixed: collection not id
  getNftTimeSeries(id: String, bucket: String, interval: String, start: String, end: String): [NftTimeSeriesItem]  # Fixed: collection not id
  getNftTimeSeriesV1(id: String, bucket: String, interval: String, start: String, end: String): [NftTimeSeriesItem]  # Fixed: returns JSON scalar

  # ===== SYSTEM ENDPOINTS (Fixed return types and arguments) =====
  getSystemChanges: [SystemChange]
  getSearchesList: [SearchItem]  # Fixed: SearchItem not SearchList
  getSearch(id: String): SearchResult  # Fixed: returns JSON scalar, argument name
  searchPosts(term: String): [SearchPost]  # Fixed: returns JSON scalar
  getPostDetails(id: String): PostDetails  # Fixed: post_id not id
  getPostTimeSeries(id: String, bucket: String, interval: String, start: String, end: String): [PostTimeSeriesItem]  # Fixed: post_id not id
}

# ===== CORRECTED TYPE DEFINITIONS =====

# Topics Types (mostly correct)
type TopicListItem {
  topic: String
  title: String
  topic_rank: Int
  topic_rank_1h_previous: Int
  topic_rank_24h_previous: Int
  num_contributors: Float
  num_posts: Float
  interactions_24h: Float
}

type TopicDetails {
  topic: String
  title: String
  topic_rank: Int
  related_topics: [String]
  types_count: JSON
  types_interactions: JSON
  types_sentiment: JSON
  types_sentiment_detail: JSON
  interactions_24h: Float
  num_contributors: Int
  num_posts: Int
  categories: [String]
  trend: String
}

type TopicWhatsup {
  summary: String
}

type TopicTimeSeriesItem {
  time: Int
  contributors_active: Int
  contributors_created: Int
  interactions: Float
  posts_active: Int
  posts_created: Int
  sentiment: Float
  spam: Int
  alt_rank: Int
  circulating_supply: Float
  close: Float
  galaxy_score: Float
  high: Float
  low: Float
  market_cap: Float
  market_dominance: Float
  open: Float
  social_dominance: Float
  volume_24h: Float
}

type TopicPost {
  id: String
  post_type: String
  post_title: String
  post_link: String
  post_image: String
  post_created: Int
  post_sentiment: Float
  creator_id: String
  creator_name: String
  creator_display_name: String
  creator_followers: Float
  creator_avatar: String
  interactions_24h: Float
  interactions_total: Float
}

type TopicNews {
  id: String
  post_type: String
  post_title: String
  post_link: String
  post_image: String
  post_created: Int
  post_sentiment: Float
  creator_id: String
  creator_name: String           # ADDED: Missing from API analysis
  creator_display_name: String   # ADDED: Missing from API analysis
  creator_followers: Float       # ADDED: Missing from API analysis
  creator_avatar: String         # ADDED: Missing from API analysis
  interactions_24h: Float        # ADDED: Missing from API analysis
  interactions_total: Float      # ADDED: Missing from API analysis
}

# Fixed TopicCreator with correct field names
type TopicCreator {
  creator_id: String  # Fixed: was 'id'
  creator_name: String  # Fixed: was 'name'
    name: String
  creator_display_name: String  # Fixed: was 'display_name'
  creator_followers: Float  # Fixed: was 'followers'
    followers: Float
  creator_avatar: String  # Fixed: was 'avatar'
  interactions_24h: Float
  id: String
}

# Fixed Category types
type CategoryListItem {
  category: String
  title: String
  # ADDED: Missing fields from API analysis
  category_rank: Int
  category_rank_1h_previous: Int
  category_rank_24h_previous: Int
  interactions_24h: Float
  num_contributors: Float
  num_posts: Float
  social_dominance: Float
}

type CategoryDetails {
  category: String
  title: String
  # ADDED: Missing fields from API analysis
  topic: String
  interactions_24h: Float
  num_contributors: Int
  num_posts: Int
  trend: String
  related_topics: [String]
  types_count: JSON
  types_interactions: JSON
  types_sentiment: JSON
}

type CategoryTopic {
  topic: String
  title: String
  # ADDED: Missing fields from API analysis
  topic_rank: Int
  topic_rank_1h_previous: Int
  topic_rank_24h_previous: Int
  interactions_24h: Float
  num_contributors: Float
  num_posts: Float
  social_dominance: Float
}

type CategoryTimeSeriesItem {
  time: Int
  interactions: Float
  # ADDED: Missing fields from API analysis
  contributors_active: Int
  contributors_created: Int
  posts_active: Int
  posts_created: Int
  sentiment: Float
  spam: Int
}

type CategoryPost {
  id: String
  post_title: String
  post_type: String
  # ADDED: Missing fields from API analysis
  post_link: String
  post_image: String
  post_created: Int
  post_sentiment: Float
  creator_id: String
  creator_name: String
  creator_display_name: String
  creator_followers: Float
  creator_avatar: String
  interactions_24h: Float
  interactions_total: Float
}

type CategoryNews {
  id: String
  post_title: String
  post_type: String
  # ADDED: Missing fields from API analysis
  post_link: String
  post_image: String
  post_created: Int
  post_sentiment: Float
  creator_id: String
  creator_name: String
  creator_display_name: String
  creator_followers: Float
  creator_avatar: String
  interactions_24h: Float
  interactions_total: Float
}

type CategoryCreator {
  creator_id: String
  creator_name: String
  creator_followers: Float
  creator_avatar: String
  creator_rank: Int
  interactions_24h: Float
}

# Fixed Creator types - 100% API coverage
type CreatorListItem {
  creator_id: String
  creator_name: String
  creator_display_name: String
  creator_followers: Float
  creator_avatar: String        # ADDED: Missing from API analysis
  creator_network: String       # FIXED: Was 'network', API returns 'creator_network'
  creator_posts: Int            # ADDED: Missing from API analysis
  creator_rank: Int             # ADDED: Missing from API analysis
  interactions_24h: Float       # ADDED: Missing from API analysis
}

type CreatorDetails {
  creator_id: String
  creator_name: String
  creator_display_name: String
  creator_followers: Float
  creator_avatar: String
  creator_rank: Int             # ADDED: Missing from API analysis
  interactions_24h: Float       # ADDED: Missing from API analysis
  topic_influence: JSON         # ADDED: CRITICAL social trading data!
}

type CreatorTimeSeriesItem {
  time: Int
  interactions: Float
  creator_rank: Int             # ADDED: Missing from API analysis
  followers: Float              # ADDED: Missing from API analysis
  posts_active: Int             # ADDED: Missing from API analysis
}

type CreatorPost {
  id: String
  post_type: String             # ADDED: Missing from API analysis
  post_title: String
  post_link: String             # ADDED: Missing from API analysis
  post_image: String            # ADDED: Missing from API analysis
  post_created: Int             # ADDED: Missing from API analysis
  post_sentiment: Float         # ADDED: Missing from API analysis
  creator_id: String            # ADDED: Missing from API analysis
  creator_name: String          # ADDED: Missing from API analysis
  creator_display_name: String  # ADDED: Missing from API analysis
  creator_followers: Float      # ADDED: Missing from API analysis
  creator_avatar: String        # ADDED: Missing from API analysis
  interactions_24h: Float       # ADDED: Missing from API analysis
  interactions_total: Float     # ADDED: Missing from API analysis
}

# Fixed Coin types
type CoinListItem {
  id: Int                          # CHANGED: Use API id as primary
  name: String
  symbol: String
  logo: String
  price: Float
  market_cap: Float
  alt_rank: Int
  # ADDED 23 MISSING FIELDS FROM API:
  alt_rank_previous: Int           # Previous AltRank position
  blockchains: [JSON]              # Blockchain information array
  categories: [String]             # Categories this coin belongs to
  circulating_supply: Float        # Circulating supply amount
  galaxy_score: Float              # LunarCrush Galaxy Score
  galaxy_score_previous: Float     # Previous Galaxy Score
  interactions_24h: Float          # 24h social interactions
  last_updated_price: Int          # Price last update timestamp
  last_updated_price_by: String    # Price update source
  market_cap_rank: Int             # Market cap ranking
  market_dominance: Float          # Market dominance percentage
  market_dominance_prev: Float     # Previous market dominance
  max_supply: Float                # Maximum supply
  percent_change_1h: Float         # 1 hour price change %
  percent_change_24h: Float        # 24 hour price change %
  percent_change_30d: Float        # 30 day price change %
  percent_change_7d: Float         # 7 day price change %
  price_btc: Float                 # Price in BTC
  sentiment: Float                 # Social sentiment score
  social_dominance: Float          # Social dominance percentage
  social_volume_24h: Float         # 24h social volume
  topic: String                    # Associated social topic
  volatility: Float                # Price volatility metric
  volume_24h: Float                # 24h trading volume
}

type CoinDetails {
  id: Int                          # CHANGED: Use API id as primary
  name: String
  symbol: String
  price: Float
  market_cap: Float
  alt_rank: Int
  close: Float                     # Keep - exists in API
  # ADDED 12 MISSING FIELDS FROM API:
  circulating_supply: Float        # Circulating supply amount
  galaxy_score: Float              # LunarCrush Galaxy Score
  market_cap_rank: Int             # Market cap ranking
  max_supply: Float                # Maximum supply
  percent_change_24h: Float        # 24 hour price change %
  percent_change_30d: Float        # 30 day price change %
  percent_change_7d: Float         # 7 day price change %
  price_btc: Float                 # Price in BTC
  volatility: Float                # Price volatility metric
  volume_24h: Float                # 24h trading volume
  # REMOVED: logo (not in this API), interactions_24h (wrong endpoint)
}

type CoinTimeSeriesItem {
  time: Int
  close: Float
  high: Float
  low: Float
  volume_24h: Float
  # ADDED 14 MISSING FIELDS FROM API:
  alt_rank: Int                    # AltRank at this time
  circulating_supply: Float        # Supply at this time
  contributors_active: Int         # Active contributors count
  contributors_created: Int        # New contributors count
  galaxy_score: Float              # Galaxy Score at this time
  interactions: Float              # Social interactions
  market_cap: Float                # Market cap at this time
  market_dominance: Float          # Market dominance at this time
  open: Float                      # Opening price
  posts_active: Int                # Active posts count
  posts_created: Int               # New posts count
  sentiment: Float                 # Sentiment score
  social_dominance: Float          # Social dominance percentage
  spam: Int                        # Spam posts count
}

type CoinMeta {
  id: Int                          # CHANGED: Use API id as primary
  name: String
  symbol: String                   # ADDED: Missing symbol field
  description: String
  # ADDED 19 MISSING METADATA FIELDS FROM API:
  blockchain: String               # Blockchain platform
  coingecko_link: String           # CoinGecko URL
  coinmarketcap_link: String       # CoinMarketCap URL
  forum_link: String               # Forum discussion URL
  github_link: String              # GitHub repository URL
  header_image: String             # Header image URL
  header_text: String              # Header text content
  market_categories: [String]      # Market category classifications
  overview_promotion: String       # Promotional overview text
  sections_order: [String]         # Content sections order
  short_summary: String            # Brief summary description
  telegram_link: String            # Telegram group URL
  twitter_link: String             # Twitter profile URL
  updated: Int                     # Last update timestamp
  videos: [JSON]                   # Video content array
  website_link: String             # Official website URL
  whitepaper_link: String          # Whitepaper document URL
  wikipedia_link: String           # Wikipedia page URL
}

# Fixed Stock types
type StockListItem {
  id: Int                      # Primary identifier from API
  symbol: String               # Stock symbol
  name: String                 # Company name
  logo: String                 # Company logo URL
  price: Float                 # Current price
  alt_rank: Int                # ADDED: AltRank
  alt_rank_previous: Int       # ADDED: Previous AltRank
  categories: [String]         # ADDED: Stock categories
  galaxy_score: Float          # ADDED: Galaxy Score
  galaxy_score_previous: Float # ADDED: Previous Galaxy Score
  interactions_24h: Float      # ADDED: 24h interactions
  market_cap: Float            # ADDED: Market cap
  market_cap_rank: Int         # ADDED: Market cap rank
  market_dominance: Float      # ADDED: Market dominance
  market_dominance_prev: Float # ADDED: Previous market dominance
  percent_change_24h: Float    # ADDED: 24h price change
  sentiment: Float             # ADDED: Social sentiment
  social_dominance: Float      # ADDED: Social dominance
  social_volume_24h: Float     # ADDED: 24h social volume
  topic: String                # ADDED: Associated topic
  volume_24h: Float            # ADDED: 24h trading volume
}

type StockDetails {
  id: Int                      # Primary identifier from API
  symbol: String               # Stock symbol
  name: String                 # Company name
  close: Float                 # Closing price
  price: Float                 # Current price
  market_cap: Float            # ADDED: Market cap
  market_cap_rank: Int         # ADDED: Market cap rank
  percent_change_24h: Float    # ADDED: 24h price change
  volume_24h: Float            # ADDED: 24h trading volume
}

type StockTimeSeriesItem {
  time: Int                    # Timestamp
  close: Float                 # Closing price
  alt_rank: Int                # ADDED: AltRank
  contributors_active: Int     # ADDED: Active contributors
  contributors_created: Int    # ADDED: New contributors
  galaxy_score: Float          # ADDED: Galaxy Score
  high: Float                  # ADDED: High price
  interactions: Float          # ADDED: Social interactions
  low: Float                   # ADDED: Low price
  market_cap: Float            # ADDED: Market cap
  market_dominance: Float      # ADDED: Market dominance
  open: Float                  # ADDED: Opening price
  posts_active: Int            # ADDED: Active posts
  posts_created: Int           # ADDED: New posts
  sentiment: Float             # ADDED: Social sentiment
  social_dominance: Float      # ADDED: Social dominance
  spam: Int                    # ADDED: Spam count
}

# Fixed NFT types
type NftListItem {
  id: String
  name: String
  logo: String
  floor_price: Float
  # ADDED: 11 missing fields from API analysis
  alt_rank: Int                 # ADDED: AltRank for NFT collections
  base_crypto: String           # ADDED: Base cryptocurrency
  galaxy_score: Float           # ADDED: Galaxy Score metric
  interactions_24h: Float       # ADDED: Social interactions
  lunar_id: String              # ADDED: LunarCrush internal ID
  market_cap: Float             # ADDED: Market capitalization
  percent_change_24h: Float     # ADDED: 24h price change
  social_contributors: Int      # ADDED: Number of social contributors
  social_dominance: Float       # ADDED: Social dominance metric
  social_volume_24h: Float      # ADDED: Social volume
  volume_24h: Float             # ADDED: Trading volume
}

type NftDetails {
  id: String
  name: String
  floor_price: Float
  # ADDED: 3 missing fields from API analysis
  market_cap: Float             # ADDED: Market capitalization
  percent_change_24h: Float     # ADDED: 24h price change
  volume_24h: Float             # ADDED: Trading volume
  # REMOVED: logo, interactions_24h (not in API details response)
}

type NftTimeSeriesItem {
  time: Int
  # REPLACED: floor_price, volume with 9 actual API fields
  alt_rank: Int                 # ADDED: AltRank over time
  contributors_active: Int      # ADDED: Active social contributors
  contributors_created: Int     # ADDED: New contributors created
  interactions: Float           # ADDED: Social interactions
  market_cap: Float             # ADDED: Market cap over time
  posts_active: Int             # ADDED: Active posts
  posts_created: Int            # ADDED: New posts created
  sentiment: Float              # ADDED: Social sentiment score
  social_dominance: Float       # ADDED: Social dominance metric
}

# Fixed System types
type SystemChange {
  change: String  # Fixed: was 'id'
  type: String
  description: String  # Fixed: was 'change'
  timestamp: Int
  id: String
}

type SearchList {
  id: String
  query: String
}

type SearchItem {
  id: String
  query: String
}

type PostDetails {
  id: String
    title: String
  content: String
  post_title: String  # Fixed: was 'title'
}

type PostTimeSeriesItem {
  time: Int
  interactions: Float
}

# Additional types for fixed JSON returns
type SearchResult {
  id: String
  query: String
  results: [String]
}

type SearchPost {
  id: String
  title: String
}
`;

// Re-export for compatibility
export default typeDefs;
