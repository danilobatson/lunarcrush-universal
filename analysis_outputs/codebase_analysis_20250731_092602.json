{
  "analysis_timestamp": "2025-07-31T16:26:02Z",
  "project_structure": {
    "root_files": [
      "./test-all-resolvers.js",
      "./turbo.json",
      "./node_modules/queue-microtask/index.js",
      "./node_modules/queue-microtask/package.json",
      "./node_modules/queue-microtask/index.d.ts",
      "./node_modules/yoctocolors-cjs/index.js",
      "./node_modules/yoctocolors-cjs/package.json",
      "./node_modules/yoctocolors-cjs/index.d.ts",
      "./node_modules/tinyglobby/dist/index.js",
      "./node_modules/tinyglobby/dist/index.d.ts",
      "./node_modules/tinyglobby/package.json",
      "./node_modules/callsites/index.js",
      "./node_modules/callsites/package.json",
      "./node_modules/callsites/index.d.ts",
      "./node_modules/scuid/package.json",
      "./node_modules/scuid/lib/scuid.js",
      "./node_modules/zod/package.json",
      "./node_modules/zod/lib/ZodError.js",
      "./node_modules/zod/lib/locales/en.d.ts",
      "./node_modules/zod/lib/locales/en.js",
      "./node_modules/zod/lib/types.js",
      "./node_modules/zod/lib/errors.d.ts",
      "./node_modules/zod/lib/types.d.ts",
      "./node_modules/zod/lib/ZodError.d.ts",
      "./node_modules/zod/lib/index.js",
      "./node_modules/zod/lib/external.js",
      "./node_modules/zod/lib/__tests__/Mocker.d.ts",
      "./node_modules/zod/lib/__tests__/Mocker.js",
      "./node_modules/zod/lib/errors.js",
      "./node_modules/zod/lib/benchmarks/primitives.d.ts",
      "./node_modules/zod/lib/benchmarks/primitives.js",
      "./node_modules/zod/lib/benchmarks/realworld.d.ts",
      "./node_modules/zod/lib/benchmarks/discriminatedUnion.js",
      "./node_modules/zod/lib/benchmarks/object.js",
      "./node_modules/zod/lib/benchmarks/index.js",
      "./node_modules/zod/lib/benchmarks/discriminatedUnion.d.ts",
      "./node_modules/zod/lib/benchmarks/string.d.ts",
      "./node_modules/zod/lib/benchmarks/object.d.ts",
      "./node_modules/zod/lib/benchmarks/string.js",
      "./node_modules/zod/lib/benchmarks/union.js",
      "./node_modules/zod/lib/benchmarks/realworld.js",
      "./node_modules/zod/lib/benchmarks/index.d.ts",
      "./node_modules/zod/lib/benchmarks/union.d.ts",
      "./node_modules/zod/lib/index.umd.js",
      "./node_modules/zod/lib/external.d.ts",
      "./node_modules/zod/lib/index.d.ts",
      "./node_modules/zod/lib/helpers/enumUtil.js",
      "./node_modules/zod/lib/helpers/errorUtil.d.ts",
      "./node_modules/zod/lib/helpers/util.js",
      "./node_modules/zod/lib/helpers/partialUtil.js"
    ],
    "has_hono": true,
    "has_backend_yoga": true
  },
  "hono_analysis": {
    "typescript_files_count": 416,
    "main_files": [
      "./node_modules/zod/v4-mini/index.d.ts",
      "./node_modules/zod/v4/locales/ua.d.ts",
      "./node_modules/zod/v4/locales/sl.d.ts",
      "./node_modules/zod/v4/locales/mk.d.ts",
      "./node_modules/zod/v4/locales/tr.d.ts",
      "./node_modules/zod/v4/locales/ps.d.ts",
      "./node_modules/zod/v4/locales/hu.d.ts",
      "./node_modules/zod/v4/locales/ms.d.ts",
      "./node_modules/zod/v4/locales/nl.d.ts",
      "./node_modules/zod/v4/locales/ja.d.ts",
      "./node_modules/zod/v4/locales/ru.d.ts",
      "./node_modules/zod/v4/locales/pl.d.ts",
      "./node_modules/zod/v4/locales/de.d.ts",
      "./node_modules/zod/v4/locales/fi.d.ts",
      "./node_modules/zod/v4/locales/eo.d.ts",
      "./node_modules/zod/v4/locales/ta.d.ts",
      "./node_modules/zod/v4/locales/zh-CN.d.ts",
      "./node_modules/zod/v4/locales/ur.d.ts",
      "./node_modules/zod/v4/locales/be.d.ts",
      "./node_modules/zod/v4/locales/pt.d.ts"
    ],
    "schema_preview": "null",
    "resolvers_preview": "null",
    "mock_data_patterns": [
      "src/graphql/pure-resolvers.ts:      price: Math.random() * 50000,",
      "src/graphql/pure-resolvers.ts:      sentiment: Math.random() * 100,",
      "src/graphql/pure-resolvers.ts:      socialScore: Math.random() * 1000,",
      "src/graphql/pure-resolvers.ts:    // Return mock preferences (in real app, fetch from DB)",
      "src/routes/streaming.ts:        await stream.writeln(`\ud83d\udcca Data packet ${i}: BTC Price: ${(Math.random() * 50000 + 30000).toFixed(2)}`)",
      "src/routes/streaming.ts:        const price = Math.random() * 50000 + 30000",
      "src/routes/streaming.ts:        const sentiment = Math.random() * 100",
      "src/routes/streaming.ts:        const volume = Math.random() * 1000000",
      "src/routes/streaming.ts:            change24h: ((Math.random() - 0.5) * 20).toFixed(2)",
      "src/routes/admin.ts:        totalRequests: Math.floor(Math.random() * 10000),"
    ],
    "dependencies": {
      "@hono-rate-limiter/cloudflare": "^0.2.2",
      "@hono/zod-validator": "^0.7.2",
      "graphql": "^16.11.0",
      "graphql-http": "^1.22.4",
      "hono": "^4.8.10",
      "hono-rate-limiter": "^0.4.2",
      "zod": "^3.22.4"
    }
  },
  "backend_yoga_analysis": {
    "typescript_files_count": 6,
    "main_files": [
      "./src/generated/types.ts",
      "./src/schema.ts",
      "./src/utils/health.ts",
      "./src/index.ts",
      "./src/services/lunarcrush.ts",
      "./src/services/lunarcrush-fixes.ts"
    ],
    "lunarcrush_files": [
      "./src/services/lunarcrush.ts",
      "./src/services/lunarcrush-fixes.ts"
    ],
    "service_files": [
      "src/services/lunarcrush.ts",
      "src/services/lunarcrush-fixes.ts"
    ],
    "resolver_files": [
      "./test-all-resolvers.js"
    ],
    "api_integration_patterns": [
      "src/generated/types.ts: * This replaces the old @lunarcrush/shared-types package",
      "src/schema.ts:# https://lunarcrush.com/developers/api/endpoints",
      "src/utils/health.ts:      lunarcrush: {",
      "src/utils/health.ts:    const [lunarcrushCheck, databaseCheck] = await Promise.all([",
      "src/utils/health.ts:          lunarcrush: lunarcrushCheck",
      "src/utils/health.ts:          lunarcrush: {",
      "src/index.ts:} from './services/lunarcrush';",
      "src/index.ts:} from './services/lunarcrush-fixes';",
      "src/index.ts:\t\t\t\tbaseUrl: 'https://lunarcrush.com/api4/public',",
      "src/index.ts:\t\t\t\t\t\t\t\tlunarcrush: {"
    ],
    "dependencies": {
      "@envelop/core": "^5.3.0",
      "@envelop/live-query": "^9.0.0",
      "@envelop/response-cache-redis": "^4.2.4",
      "@google/generative-ai": "^0.24.1",
      "@graphql-yoga/plugin-csrf-prevention": "^3.15.1",
      "@graphql-yoga/plugin-response-cache": "^3.17.1",
      "@upstash/redis": "^1.35.1",
      "graphql": "^16.11.0",
      "graphql-yoga": "^5.10.4",
      "hono": "^4.8.9",
      "ioredis": "^5.6.1",
      "node-fetch": "^3.3.2"
    }
  },
  "lunarcrush_integration": {
    "environment_references": [
      "./packages/backend-yoga/src/index.ts:\tLUNARCRUSH_API_KEY: { get(): Promise<string> };",
      "./packages/backend-yoga/src/index.ts:\tLUNARCRUSH_CACHE: KVNamespace;",
      "./packages/backend-yoga/src/index.ts:\t\t\tconst apiKey = await env.LUNARCRUSH_API_KEY.get();",
      "./packages/backend-yoga/src/index.ts:\t\t\t\t\tconst testApiKey = await env.LUNARCRUSH_API_KEY.get();",
      "./packages/backend-yoga/src/index.ts:\t\t\t\t\t\t\t\t\tawait env.LUNARCRUSH_CACHE.put("
    ],
    "env_file_exists": false,
    "env_local_exists": false
  },
  "migration_requirements": {
    "needs_lunarcrush_service": true,
    "needs_real_data_replacement": true,
    "needs_resolver_migration": true,
    "performance_target": "20ms_max",
    "current_hono_performance": "7ms_baseline"
  }
}
