
 ⛅️ wrangler 4.26.1 (update available 4.27.0)
─────────────────────────────────────────────
Using vars defined in .dev.vars
Your Worker has access to the following bindings:
Binding                                                                           Resource                  Mode
env.LUNARCRUSH_CACHE (6bf88b7f2bac40e9888dc565db7e8faf)                           KV Namespace              local
env.DB (lunarcrush-universal-db)                                                  D1 Database               local
env.LUNARCRUSH_API_KEY (2593c430bd90424a886728435dd57004/LUNARCRUSH_API_KEY)      Secrets Store Secret      local
env.ENVIRONMENT ("production")                                                    Environment Variable      local
env.JWT_SECRET ("(hidden)")                                                       Environment Variable      local
env.LUNARCRUSH_API_KEY ("(hidden)")                                               Environment Variable      local

⎔ Starting local server...
✅ Pure GraphQL resolvers loaded
🚀 Creating Hono app with working GraphQL setup...
✅ Hono app configured with working GraphQL setup
[wrangler:info] Ready on http://localhost:8787
<-- POST /graphql
🔍 GraphQL request received: {
  query: '{ getTopic(topic: "bitcoin") { symbol name } }...',
  variables: {},
  requestId: '6b7b6715-53ad-4e7b-9ebe-c840886a0015'
}
🏗️ Executing GraphQL query with pure graphql() function...
🌙 getTopic resolver called with: bitcoin
[31m✘ [41;31m[[41;97mERROR[41;31m][0m [1m❌ getTopic error: Error: Secret "LUNARCRUSH_API_KEY" not found[0m

      at async Object.getTopic (file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/packages/hono/src/graphql/pure-resolvers.ts:44:22)
      at [object Object]
      at null.<anonymous> (async file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/packages/hono/.wrangler/tmp/dev-O2AFNL/index.js:15367:20)
      at async dispatch (file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/node_modules/hono/dist/compose.js:22:17)
      at null.<anonymous> (async file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/packages/hono/.wrangler/tmp/dev-O2AFNL/index.js:15336:3)
      at async dispatch (file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/node_modules/hono/dist/compose.js:22:17)
      at async cors2 (file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/node_modules/hono/dist/middleware/cors/index.js:84:5)
      at async dispatch (file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/node_modules/hono/dist/compose.js:22:17)
      at async prettyJSON2 (file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/node_modules/hono/dist/middleware/pretty-json/index.js:6:5)
      at async dispatch (file:///Users/batson/Desktop/ForTheNerds/lunarcrush-universal/node_modules/hono/dist/compose.js:22:17) {
    remote: true
  }


✅ GraphQL query executed successfully
--> POST /graphql [32m200[0m 59ms
<-- POST /graphql
🔍 GraphQL request received: {
  query: '{ getTopic(topic: "bitcoin") { symbol name close } }...',
  variables: {},
  requestId: '4bdb7c93-3ed6-47b9-b8c8-8915f0dbddd3'
}
🏗️ Executing GraphQL query with pure graphql() function...
✅ GraphQL query executed successfully
--> POST /graphql [32m200[0m 20ms
<-- POST /graphql
🔍 GraphQL request received: {
  query: '{ getTopic(topic: "bitcoin") { symbol name close sentiment } }...',
  variables: {},
  requestId: 'ca76295a-2250-4f4c-a3fe-8d94bf098589'
}
🏗️ Executing GraphQL query with pure graphql() function...
✅ GraphQL query executed successfully
--> POST /graphql [32m200[0m 11ms
<-- POST /graphql
🔍 GraphQL request received: {
  query: '{ getTopic(topic: "bitcoin") { symbol name close sentiment social_score } }...',
  variables: {},
  requestId: 'bb90ef48-d754-4eca-a134-3d53432611b5'
}
🏗️ Executing GraphQL query with pure graphql() function...
✅ GraphQL query executed successfully
--> POST /graphql [32m200[0m 11ms
[wrangler:info] POST /graphql 200 OK (87ms)
[wrangler:info] POST /graphql 200 OK (25ms)
[wrangler:info] POST /graphql 200 OK (14ms)
<-- POST /graphql
🔍 GraphQL request received: {
  query: '{ __schema { queryType { fields { name type { name } } } } }...',
  variables: {},
  requestId: 'aa197bce-59b6-46f8-bef7-1fcd21d3f4a8'
}
🏗️ Executing GraphQL query with pure graphql() function...
[wrangler:info] POST /graphql 200 OK (21ms)
✅ GraphQL query executed successfully
--> POST /graphql [32m200[0m 8ms
[wrangler:info] POST /graphql 200 OK (12ms)
🪵  Logs were written to "/Users/batson/Library/Preferences/.wrangler/logs/wrangler-2025-07-31_18-12-01_425.log"
